#import "GLDrawablePC33.clc"


GLHalfCubePC33:GLDrawablePC33
{

	// constructor
	
	
	char isLeftSided;
	char isRightSided;
	

	void init( )
	{
	
		// printf( "\nGLHalfCubePC33 init" );
		// printf( "\naddress %lx components %lx components0 %lx" , ( long ) self , ( long ) self->_components , ( long ) self->_components[0] );
	
		GLDrawablePC33:init( self );

		texture 		= 0;
		mode 			= GL_TRIANGLES;
		
		isLeftSided		= 1;
		isRightSided	= 0;
		
		indexCount 		= 18;
		vertexCount 	= 12;
		
		vertexesSize 	= sizeof( GLfloat ) * 6 * vertexCount;
		indexesSize 	= sizeof( GLushort ) * indexCount;

		vertexes 		= malloc( vertexesSize );
		indexes 		= malloc( indexesSize );
		
		const GLfloat constva[] =
		{

		
			//X   Y   Z			NX	NY	NZ			R	G	B	A
			
			//    2       1   2    front face
			// y
			//  x 1   3       3

			//    2        1    2   bottom face
			// z
			//  x 1   3         3
			
			//      2       1   2   left face
			// y    
			//  z   1   3       3
			 
			0.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,
			0.0f, 1.0f, 0.0f,   1.0f, 1.0f, 1.0f,
			1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,
			1.0f, 1.0f, 0.0f,   1.0f, 1.0f, 1.0f,
			
			0.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,
			0.0f, 0.0f,-1.0f,   1.0f, 1.0f, 1.0f,
			1.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,
			1.0f, 0.0f,-1.0f,   1.0f, 1.0f, 1.0f,
			
			0.0f, 0.0f, 0.0f,   1.0f, 1.0f, 1.0f,
			0.0f, 1.0f, 0.0f,   1.0f, 1.0f, 1.0f,
			0.0f, 0.0f,-1.0f,   1.0f, 1.0f, 1.0f,
			0.0f, 1.0f,-1.0f,   1.0f, 1.0f, 1.0f
					
		};

		// index array
		
		const GLushort constia[] =
		{ 
		
			0 , 2 , 1 , 1 , 2 , 3 ,
			4 , 5 , 6 , 5 , 7 , 6 ,
			8 , 9 , 10 , 9 , 11 , 10
			
		};
		
		memcpy( vertexes , constva , vertexesSize );			
		memcpy( indexes  , constia , indexesSize );			
	
	}
	
	
	// destructor
	
	void destruct( )
	{

		// printf( "\nGLHalfCubePC33 destruct" );

		GLDrawablePC33:destruct( self );

	}
	
	
	// shows only left faces
	
	void setLeftSided( )
	{
	
		isLeftSided  = 1;
		isRightSided = 0;
	
		vertexes[ 48 ] -= sx;
		vertexes[ 54 ] -= sx;
		vertexes[ 60 ] -= sx;
		vertexes[ 66 ] -= sx;

		// index array
		
		const GLushort constia[] =
		{ 
		
			0 , 2 , 1 , 1 , 2 , 3 ,
			4 , 5 , 6 , 5 , 7 , 6 ,
			8 , 9 , 10 , 9 , 11 , 10
			
		};

		memcpy( indexes  , constia , indexesSize );			
	
	}
	
	
	// shows only right faces
	
	void setRightSided( )
	{

		isLeftSided  = 0;
		isRightSided = 1;
	
		vertexes[ 48 ] += sx;
		vertexes[ 54 ] += sx;
		vertexes[ 60 ] += sx;
		vertexes[ 66 ] += sx;

		// index array
		
		const GLushort constia[] =
		{ 
		
			0 , 2 , 1 , 1 , 2 , 3 ,
			4 , 5 , 6 , 5 , 7 , 6 ,
			8 , 10 , 9 , 9 , 10 , 11
			
		};

		memcpy( indexes  , constia , indexesSize );			
			
	}	

}